version: "3.8"
services:
  kibana:
    image: ${VNA_KIBANA_IMAGE}
    ports: ["${VNA_KIBANA_PORT}:5601"]
    environment:
      SERVER_NAME: vna_kibana
      ELASTICSEARCH_HOSTS: http://es01:9200
    networks: [elastic]
    depends_on: [es01]

  es01:
    container_name: es01
    environment:
      - xpack.security.enabled=false
      - node.name=es01
      - cluster.name=es-docker-cluster
      - discovery.seed_hosts=es02,es03
      - cluster.initial_master_nodes=es01,es02,es03
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - path.repo=/mnt/snapshots

    ports: ["${VNA_ES_PORT}:9200"]
    volumes:
      - "${VNA_ES_DATA_PATH_ON_HOST}/node_1:/usr/share/elasticsearch/data:rw"
      - "${VNA_ES_DATA_PATH_ON_HOST}/snapshots:/mnt/snapshots:rw"

    image: ${VNA_ES_IMAGE}
    ulimits: { memlock: { soft: -1, hard: -1 } }
    networks: [elastic]

  es02:
    container_name: es02
    environment:
      - xpack.security.enabled=false
      - node.name=es02
      - cluster.name=es-docker-cluster
      - discovery.seed_hosts=es01,es03
      - cluster.initial_master_nodes=es01,es02,es03
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - path.repo=/mnt/snapshots

    volumes:
      - "${VNA_ES_DATA_PATH_ON_HOST}/node_2:/usr/share/elasticsearch/data:rw"
      - "${VNA_ES_DATA_PATH_ON_HOST}/snapshots:/mnt/snapshots:rw"

    image: ${VNA_ES_IMAGE}
    ulimits: { memlock: { soft: -1, hard: -1 } }
    networks: [elastic]

  es03:
    container_name: es03
    environment:
      - xpack.security.enabled=false
      - node.name=es03
      - cluster.name=es-docker-cluster
      - discovery.seed_hosts=es01,es02
      - cluster.initial_master_nodes=es01,es02,es03
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - path.repo=/mnt/snapshots

    volumes:
      - "${VNA_ES_DATA_PATH_ON_HOST}/node_3:/usr/share/elasticsearch/data:rw"
      - "${VNA_ES_DATA_PATH_ON_HOST}/snapshots:/mnt/snapshots:rw"

    image: ${VNA_ES_IMAGE}
    ulimits: { memlock: { soft: -1, hard: -1 } }
    networks: [elastic]

networks:
  elastic:
    driver: bridge
