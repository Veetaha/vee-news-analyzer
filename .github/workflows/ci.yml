# Warning: autogenerated file, see `cargo xtask codegen`
---
name: cicd
"on":
  pull_request: ~
  push:
    branches:
      - master
env:
  CARGO_NET_RETRY: 10
  RUSTUP_MAX_RETRIES: 10
  CARGO_INCREMENTAL: 0
  RUST_BACKTRACE: full
  RUSTFLAGS: "--deny warnings -Cdebuginfo=0"
  RUSTDOCFLAGS: "--deny warnings"
jobs:
  cargo-deny-check:
    env:
      RUSTC_WRAPPER: ""
    name: cargo deny check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - uses: EmbarkStudios/cargo-deny-action@master
  rust-lint-and-test:
    name: rust lint and test
    runs-on: "${{ matrix.os }}"
    strategy:
      matrix:
        os:
          - ubuntu-latest
        channel:
          - "1.43.1"
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Cache cargo/registry/index
        uses: actions/cache@v1
        with:
          path: ~/.cargo/registry/index
          key: "cargo-registry-index-${{ matrix.os }}-${{ matrix.channel }}-${{ hashFiles('**/Cargo.toml') }}\n"
          restore-keys: "cargo-registry-index-${{ matrix.os }}-${{ matrix.channel }}\n"
      - name: Cache cargo/registry/cache
        uses: actions/cache@v1
        with:
          path: ~/.cargo/registry/cache
          key: "cargo-registry-cache-${{ matrix.os }}-${{ matrix.channel }}-${{ hashFiles('**/Cargo.toml') }}\n"
          restore-keys: "cargo-registry-cache-${{ matrix.os }}-${{ matrix.channel }}\n"
      - name: Cache cargo/git/db
        uses: actions/cache@v1
        with:
          path: ~/.cargo/git/db
          key: "cargo-git-db-${{ matrix.os }}-${{ matrix.channel }}-${{ hashFiles('**/Cargo.toml') }}\n"
          restore-keys: "cargo-git-db-${{ matrix.os }}-${{ matrix.channel }}\n"
      - name: Install toolchain via rustup
        run: "rustup set profile minimal\nrustup toolchain install ${{ matrix.channel }}\n"
      - run: rustup component add clippy rustfmt
      - run: "cargo +${{ matrix.channel }} clippy --workspace"
      - run: "cargo +${{ matrix.channel }} fmt --all -- --check"
      - run: "cargo +${{ matrix.channel }} build --workspace"
      - run: "cargo +${{ matrix.channel }} test --workspace --no-run"
      - run: "cargo +${{ matrix.channel }} test --workspace"
  rust-test-on-unstable:
    needs: rust-lint-and-test
    name: rust unstable test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        os:
          - ubuntu-latest
        channel:
          - beta
          - nightly
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Cache cargo/registry/index
        uses: actions/cache@v1
        with:
          path: ~/.cargo/registry/index
          key: "cargo-registry-index-${{ matrix.os }}-${{ matrix.channel }}-${{ hashFiles('**/Cargo.toml') }}\n"
          restore-keys: "cargo-registry-index-${{ matrix.os }}-${{ matrix.channel }}\n"
      - name: Cache cargo/registry/cache
        uses: actions/cache@v1
        with:
          path: ~/.cargo/registry/cache
          key: "cargo-registry-cache-${{ matrix.os }}-${{ matrix.channel }}-${{ hashFiles('**/Cargo.toml') }}\n"
          restore-keys: "cargo-registry-cache-${{ matrix.os }}-${{ matrix.channel }}\n"
      - name: Cache cargo/git/db
        uses: actions/cache@v1
        with:
          path: ~/.cargo/git/db
          key: "cargo-git-db-${{ matrix.os }}-${{ matrix.channel }}-${{ hashFiles('**/Cargo.toml') }}\n"
          restore-keys: "cargo-git-db-${{ matrix.os }}-${{ matrix.channel }}\n"
      - name: Install toolchain via rustup
        run: "rustup set profile minimal\nrustup toolchain install ${{ matrix.channel }}\n"
      - run: "cargo +${{ matrix.channel }} build --workspace"
      - run: "cargo +${{ matrix.channel }} test --workspace --no-run"
      - run: "cargo +${{ matrix.channel }} test --workspace"
